//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApibookingAdministrator.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HOSTING_MANAGEREntities : DbContext
    {
        public HOSTING_MANAGEREntities()
            : base("name=HOSTING_MANAGEREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<API_LOGIN_LOG> API_LOGIN_LOG { get; set; }
        public virtual DbSet<BOOKING> BOOKING { get; set; }
        public virtual DbSet<DOCUMENT_TYPE> DOCUMENT_TYPE { get; set; }
        public virtual DbSet<HOTEL> HOTEL { get; set; }
        public virtual DbSet<HOTEL_TRAVEL_AGENT> HOTEL_TRAVEL_AGENT { get; set; }
        public virtual DbSet<LOCATION> LOCATION { get; set; }
        public virtual DbSet<RIDER> RIDER { get; set; }
        public virtual DbSet<ROOM> ROOM { get; set; }
        public virtual DbSet<ROOM_STATE> ROOM_STATE { get; set; }
        public virtual DbSet<ROOM_TAX> ROOM_TAX { get; set; }
        public virtual DbSet<ROOM_TYPE> ROOM_TYPE { get; set; }
        public virtual DbSet<STATE_BOOKING> STATE_BOOKING { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TAX> TAX { get; set; }
        public virtual DbSet<TRAVEL_AGENT> TRAVEL_AGENT { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CREATE_BOOKING(Nullable<int> rOOM_ID, Nullable<int> rIDER_ID, string cODE, Nullable<System.DateTime> cHEK_IN, Nullable<System.DateTime> cHEK_OUNT, Nullable<int> nUMBER_PEOPLE, string dESCRIPTION, Nullable<int> sTATE_BOOKING_ID, ObjectParameter bOOKING_ID)
        {
            var rOOM_IDParameter = rOOM_ID.HasValue ?
                new ObjectParameter("ROOM_ID", rOOM_ID) :
                new ObjectParameter("ROOM_ID", typeof(int));
    
            var rIDER_IDParameter = rIDER_ID.HasValue ?
                new ObjectParameter("RIDER_ID", rIDER_ID) :
                new ObjectParameter("RIDER_ID", typeof(int));
    
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var cHEK_INParameter = cHEK_IN.HasValue ?
                new ObjectParameter("CHEK_IN", cHEK_IN) :
                new ObjectParameter("CHEK_IN", typeof(System.DateTime));
    
            var cHEK_OUNTParameter = cHEK_OUNT.HasValue ?
                new ObjectParameter("CHEK_OUNT", cHEK_OUNT) :
                new ObjectParameter("CHEK_OUNT", typeof(System.DateTime));
    
            var nUMBER_PEOPLEParameter = nUMBER_PEOPLE.HasValue ?
                new ObjectParameter("NUMBER_PEOPLE", nUMBER_PEOPLE) :
                new ObjectParameter("NUMBER_PEOPLE", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sTATE_BOOKING_IDParameter = sTATE_BOOKING_ID.HasValue ?
                new ObjectParameter("STATE_BOOKING_ID", sTATE_BOOKING_ID) :
                new ObjectParameter("STATE_BOOKING_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_BOOKING", rOOM_IDParameter, rIDER_IDParameter, cODEParameter, cHEK_INParameter, cHEK_OUNTParameter, nUMBER_PEOPLEParameter, dESCRIPTIONParameter, sTATE_BOOKING_IDParameter, bOOKING_ID);
        }
    
        public virtual int SP_CREATE_HOTEL(Nullable<int> lOCATION_ID, string rEFERENCE, string nAME, Nullable<int> cAPACITY, string dESCRIPTION, Nullable<int> tRAVEL_AGENT_ID, ObjectParameter hOTEL_ID)
        {
            var lOCATION_IDParameter = lOCATION_ID.HasValue ?
                new ObjectParameter("LOCATION_ID", lOCATION_ID) :
                new ObjectParameter("LOCATION_ID", typeof(int));
    
            var rEFERENCEParameter = rEFERENCE != null ?
                new ObjectParameter("REFERENCE", rEFERENCE) :
                new ObjectParameter("REFERENCE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cAPACITYParameter = cAPACITY.HasValue ?
                new ObjectParameter("CAPACITY", cAPACITY) :
                new ObjectParameter("CAPACITY", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var tRAVEL_AGENT_IDParameter = tRAVEL_AGENT_ID.HasValue ?
                new ObjectParameter("TRAVEL_AGENT_ID", tRAVEL_AGENT_ID) :
                new ObjectParameter("TRAVEL_AGENT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_HOTEL", lOCATION_IDParameter, rEFERENCEParameter, nAMEParameter, cAPACITYParameter, dESCRIPTIONParameter, tRAVEL_AGENT_IDParameter, hOTEL_ID);
        }
    
        public virtual int SP_CREATE_LOGIN_API(Nullable<int> tRAVEL_AGENT_ID, Nullable<System.DateTime> dATE_END, string tOKEN, ObjectParameter lOGINID)
        {
            var tRAVEL_AGENT_IDParameter = tRAVEL_AGENT_ID.HasValue ?
                new ObjectParameter("TRAVEL_AGENT_ID", tRAVEL_AGENT_ID) :
                new ObjectParameter("TRAVEL_AGENT_ID", typeof(int));
    
            var dATE_ENDParameter = dATE_END.HasValue ?
                new ObjectParameter("DATE_END", dATE_END) :
                new ObjectParameter("DATE_END", typeof(System.DateTime));
    
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_LOGIN_API", tRAVEL_AGENT_IDParameter, dATE_ENDParameter, tOKENParameter, lOGINID);
        }
    
        public virtual int SP_CREATE_RIDER(Nullable<int> dOCUMENT_TYPE_ID, string nUMBER_DOCUMENT, string nAME, Nullable<System.DateTime> bIRTHDAY_DATE, string gENDER, string eMAIL, Nullable<decimal> pHONE, string eMERGENCY_NAME, Nullable<decimal> eMERGENCY_PHONE, ObjectParameter rIDER_ID)
        {
            var dOCUMENT_TYPE_IDParameter = dOCUMENT_TYPE_ID.HasValue ?
                new ObjectParameter("DOCUMENT_TYPE_ID", dOCUMENT_TYPE_ID) :
                new ObjectParameter("DOCUMENT_TYPE_ID", typeof(int));
    
            var nUMBER_DOCUMENTParameter = nUMBER_DOCUMENT != null ?
                new ObjectParameter("NUMBER_DOCUMENT", nUMBER_DOCUMENT) :
                new ObjectParameter("NUMBER_DOCUMENT", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var bIRTHDAY_DATEParameter = bIRTHDAY_DATE.HasValue ?
                new ObjectParameter("BIRTHDAY_DATE", bIRTHDAY_DATE) :
                new ObjectParameter("BIRTHDAY_DATE", typeof(System.DateTime));
    
            var gENDERParameter = gENDER != null ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var pHONEParameter = pHONE.HasValue ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(decimal));
    
            var eMERGENCY_NAMEParameter = eMERGENCY_NAME != null ?
                new ObjectParameter("EMERGENCY_NAME", eMERGENCY_NAME) :
                new ObjectParameter("EMERGENCY_NAME", typeof(string));
    
            var eMERGENCY_PHONEParameter = eMERGENCY_PHONE.HasValue ?
                new ObjectParameter("EMERGENCY_PHONE", eMERGENCY_PHONE) :
                new ObjectParameter("EMERGENCY_PHONE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_RIDER", dOCUMENT_TYPE_IDParameter, nUMBER_DOCUMENTParameter, nAMEParameter, bIRTHDAY_DATEParameter, gENDERParameter, eMAILParameter, pHONEParameter, eMERGENCY_NAMEParameter, eMERGENCY_PHONEParameter, rIDER_ID);
        }
    
        public virtual int SP_CREATE_ROOM(Nullable<int> hOTEL_ID, Nullable<int> nUMBER, Nullable<int> fLOOR, Nullable<int> rOOM_TYPE_ID, string dESCRIPTION, Nullable<decimal> pRICE, ObjectParameter rOOM_ID)
        {
            var hOTEL_IDParameter = hOTEL_ID.HasValue ?
                new ObjectParameter("HOTEL_ID", hOTEL_ID) :
                new ObjectParameter("HOTEL_ID", typeof(int));
    
            var nUMBERParameter = nUMBER.HasValue ?
                new ObjectParameter("NUMBER", nUMBER) :
                new ObjectParameter("NUMBER", typeof(int));
    
            var fLOORParameter = fLOOR.HasValue ?
                new ObjectParameter("FLOOR", fLOOR) :
                new ObjectParameter("FLOOR", typeof(int));
    
            var rOOM_TYPE_IDParameter = rOOM_TYPE_ID.HasValue ?
                new ObjectParameter("ROOM_TYPE_ID", rOOM_TYPE_ID) :
                new ObjectParameter("ROOM_TYPE_ID", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_ROOM", hOTEL_IDParameter, nUMBERParameter, fLOORParameter, rOOM_TYPE_IDParameter, dESCRIPTIONParameter, pRICEParameter, rOOM_ID);
        }
    
        public virtual int SP_CREATE_TAX(Nullable<int> rOOM_ID, string nAME, string dESCRIPTION, Nullable<decimal> pERCENTAGE, Nullable<decimal> vALUE, ObjectParameter tAX_ID)
        {
            var rOOM_IDParameter = rOOM_ID.HasValue ?
                new ObjectParameter("ROOM_ID", rOOM_ID) :
                new ObjectParameter("ROOM_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var pERCENTAGEParameter = pERCENTAGE.HasValue ?
                new ObjectParameter("PERCENTAGE", pERCENTAGE) :
                new ObjectParameter("PERCENTAGE", typeof(decimal));
    
            var vALUEParameter = vALUE.HasValue ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_TAX", rOOM_IDParameter, nAMEParameter, dESCRIPTIONParameter, pERCENTAGEParameter, vALUEParameter, tAX_ID);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_GET_BOOKINGS_Result> SP_GET_BOOKINGS(Nullable<int> tRAVEL_AGENT_ID)
        {
            var tRAVEL_AGENT_IDParameter = tRAVEL_AGENT_ID.HasValue ?
                new ObjectParameter("TRAVEL_AGENT_ID", tRAVEL_AGENT_ID) :
                new ObjectParameter("TRAVEL_AGENT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_BOOKINGS_Result>("SP_GET_BOOKINGS", tRAVEL_AGENT_IDParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOTELES_Result> SP_GET_HOTELES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOTELES_Result>("SP_GET_HOTELES");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_UPDATE_HOTEL(Nullable<int> hOTEL_ID, Nullable<int> lOCATION_ID, string rEFERENCE, string nAME, Nullable<int> cAPACITY, string dESCRIPTION, Nullable<bool> sTATE)
        {
            var hOTEL_IDParameter = hOTEL_ID.HasValue ?
                new ObjectParameter("HOTEL_ID", hOTEL_ID) :
                new ObjectParameter("HOTEL_ID", typeof(int));
    
            var lOCATION_IDParameter = lOCATION_ID.HasValue ?
                new ObjectParameter("LOCATION_ID", lOCATION_ID) :
                new ObjectParameter("LOCATION_ID", typeof(int));
    
            var rEFERENCEParameter = rEFERENCE != null ?
                new ObjectParameter("REFERENCE", rEFERENCE) :
                new ObjectParameter("REFERENCE", typeof(string));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cAPACITYParameter = cAPACITY.HasValue ?
                new ObjectParameter("CAPACITY", cAPACITY) :
                new ObjectParameter("CAPACITY", typeof(int));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var sTATEParameter = sTATE.HasValue ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_HOTEL", hOTEL_IDParameter, lOCATION_IDParameter, rEFERENCEParameter, nAMEParameter, cAPACITYParameter, dESCRIPTIONParameter, sTATEParameter);
        }
    
        public virtual int SP_UPDATE_ROOM(Nullable<int> rOOM_ID, Nullable<int> nUMBER, Nullable<int> fLOOR, Nullable<int> rOOM_TYPE_ID, Nullable<decimal> pRICE, string dESCRIPTION, Nullable<int> rOOM_STATE_ID)
        {
            var rOOM_IDParameter = rOOM_ID.HasValue ?
                new ObjectParameter("ROOM_ID", rOOM_ID) :
                new ObjectParameter("ROOM_ID", typeof(int));
    
            var nUMBERParameter = nUMBER.HasValue ?
                new ObjectParameter("NUMBER", nUMBER) :
                new ObjectParameter("NUMBER", typeof(int));
    
            var fLOORParameter = fLOOR.HasValue ?
                new ObjectParameter("FLOOR", fLOOR) :
                new ObjectParameter("FLOOR", typeof(int));
    
            var rOOM_TYPE_IDParameter = rOOM_TYPE_ID.HasValue ?
                new ObjectParameter("ROOM_TYPE_ID", rOOM_TYPE_ID) :
                new ObjectParameter("ROOM_TYPE_ID", typeof(int));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var rOOM_STATE_IDParameter = rOOM_STATE_ID.HasValue ?
                new ObjectParameter("ROOM_STATE_ID", rOOM_STATE_ID) :
                new ObjectParameter("ROOM_STATE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ROOM", rOOM_IDParameter, nUMBERParameter, fLOORParameter, rOOM_TYPE_IDParameter, pRICEParameter, dESCRIPTIONParameter, rOOM_STATE_IDParameter);
        }
    
        public virtual int SP_UPDATE_TAX(Nullable<int> tAX_ID, string nAME, string dESCRIPTION, Nullable<decimal> pERCENTAGE, Nullable<decimal> vALUE)
        {
            var tAX_IDParameter = tAX_ID.HasValue ?
                new ObjectParameter("TAX_ID", tAX_ID) :
                new ObjectParameter("TAX_ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var pERCENTAGEParameter = pERCENTAGE.HasValue ?
                new ObjectParameter("PERCENTAGE", pERCENTAGE) :
                new ObjectParameter("PERCENTAGE", typeof(decimal));
    
            var vALUEParameter = vALUE.HasValue ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_TAX", tAX_IDParameter, nAMEParameter, dESCRIPTIONParameter, pERCENTAGEParameter, vALUEParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_VALIDATE_LOGIN_API_Result> SP_VALIDATE_LOGIN_API(Nullable<int> tRAVEL_AGENT_ID)
        {
            var tRAVEL_AGENT_IDParameter = tRAVEL_AGENT_ID.HasValue ?
                new ObjectParameter("TRAVEL_AGENT_ID", tRAVEL_AGENT_ID) :
                new ObjectParameter("TRAVEL_AGENT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VALIDATE_LOGIN_API_Result>("SP_VALIDATE_LOGIN_API", tRAVEL_AGENT_IDParameter);
        }
    
        public virtual ObjectResult<SP_VALIDATE_TRAVEL_AGENT_Result> SP_VALIDATE_TRAVEL_AGENT(string eMAIL, string pASSWORD)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VALIDATE_TRAVEL_AGENT_Result>("SP_VALIDATE_TRAVEL_AGENT", eMAILParameter, pASSWORDParameter);
        }
    }
}
